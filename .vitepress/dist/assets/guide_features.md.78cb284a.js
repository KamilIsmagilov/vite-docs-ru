import{o as n,c as e,a as s,b as t}from"./app.877e1a61.js";const a='{"title":"Функционал (Features)","description":"","frontmatter":{},"headers":[{"level":2,"title":"NPM разрешение зависимостей (Dependency Resolving) и Pre-Bundling","slug":"npm-разрешение-зависимостей-dependency-resolving-и-pre-bundling"},{"level":2,"title":"Hot Module Replacement","slug":"hot-module-replacement"},{"level":2,"title":"TypeScript","slug":"typescript"},{"level":3,"title":"Параметры компилятора TypeScript","slug":"параметры-компиnятора-typescript"},{"level":3,"title":"Клиентские типы (Client Types)","slug":"кnиентские-типы-client-types"},{"level":2,"title":"Vue","slug":"vue"},{"level":2,"title":"JSX","slug":"jsx"},{"level":2,"title":"CSS","slug":"css"},{"level":3,"title":"@import Inlining и Rebasing (Встраивание и преобразование)","slug":"import-inlining-и-rebasing-встраивание-и-преобразование"},{"level":3,"title":"PostCSS","slug":"postcss"},{"level":3,"title":"CSS Modules","slug":"css-modules"},{"level":3,"title":"CSS Pre-processors","slug":"css-pre-processors"},{"level":2,"title":"Static Assets (Статичные ресурсы)","slug":"static-assets-статичные-ресурсы"},{"level":2,"title":"JSON","slug":"json"},{"level":2,"title":"Glob Import","slug":"glob-import"},{"level":2,"title":"WebAssembly","slug":"webassembly"},{"level":2,"title":"Web Workers","slug":"web-workers"},{"level":2,"title":"Оптимизация сборки","slug":"оптимизация-сборки"},{"level":3,"title":"CSS Code Splitting (Разделение CSS кода)","slug":"css-code-splitting-раздеnение-css-кода"},{"level":3,"title":"Preload Directives Generation (Генерация директив предварительной загрузки)","slug":"preload-directives-generation-генерация-директив-предваритеnьной-загрузки"},{"level":3,"title":"Async Chunk Loading Optimization (Оптимизация загрузки асинхронных чанков)","slug":"async-chunk-loading-optimization-оптимизация-загрузки-асинхронных-чанков"}],"relativePath":"guide/features.md","lastUpdated":1631746298476}',l={},o=[s("h1",{id:"функционаn-features",tabindex:"-1"},[t("Функционал (Features) "),s("a",{class:"header-anchor",href:"#функционаn-features","aria-hidden":"true"},"#")],-1),s("p",null,"На самом базовом уровне, разработка с Vite не сильно отличается от разработки с использованием статичного файлового сервера. Однако, Vite предоставляет много улучшений по сравнению с нативным ESM импортом для поддержки различных функций, которые обычно встречаются в сборщиках-бандлерах.",-1),s("h2",{id:"npm-разрешение-зависимостей-dependency-resolving-и-pre-bundling",tabindex:"-1"},[t("NPM разрешение зависимостей (Dependency Resolving) и Pre-Bundling "),s("a",{class:"header-anchor",href:"#npm-разрешение-зависимостей-dependency-resolving-и-pre-bundling","aria-hidden":"true"},"#")],-1),s("p",null,'Нативный ES импорт не поддерживает импорт пустых (простых) "bare" модулей (без указания точного пути) как в следующем примере:',-1),s("div",{class:"language-js"},[s("pre",null,[s("code",null,[s("span",{class:"token keyword"},"import"),t(),s("span",{class:"token punctuation"},"{"),t(" someMethod "),s("span",{class:"token punctuation"},"}"),t(),s("span",{class:"token keyword"},"from"),t(),s("span",{class:"token string"},"'my-dep'"),t("\n")])])],-1),s("p",null,"Вышеуказанное вызовет ошибку в браузере. Vite обнаружит такой простой импорт модуля во всех обрабатываемых сервером файлах и выполнит следующее:",-1),s("ol",null,[s("li",null,[s("p",null,[s("a",{href:"./dep-pre-bundling.html"},"Pre-bundle"),t(" (пре соберёт) их, чтобы улучшить скорость загрузки страниц и сконвертирует CommonJS / UMD модули в ESM. Pre-bundling (пре-сборка) выполняется с помощью "),s("a",{href:"http://esbuild.github.io/",target:"_blank",rel:"noopener noreferrer"},"esbuild"),t(" и делает холодный старт Vite проекта значительно быстрее, чем старт такого же проекта на любом другом JavaScript бандлере.")])]),s("li",null,[s("p",null,[t("Заменит импорты на валидные URL, на подобии "),s("code",null,"/node_modules/.vite/my-dep.js?v=f3sf2ebd"),t(" и после этого браузер сможет импортировать эти модули корректно.")])])],-1),s("p",null,[s("strong",null,"Dependencies (зависимости) жёстко кэшируются")],-1),s("p",null,[t("Vite кэширует запросы зависимостей через HTTP-заголовки, поэтому, если вы хотите локально редактировать / отлаживать зависимость (dependency), выполните следующие действия описанные "),s("a",{href:"./dep-pre-bundling.html#browser-cache"},"здесь"),t(".")],-1),s("h2",{id:"hot-module-replacement",tabindex:"-1"},[t("Hot Module Replacement "),s("a",{class:"header-anchor",href:"#hot-module-replacement","aria-hidden":"true"},"#")],-1),s("p",null,[t("Vite предоставляет "),s("a",{href:"./api-hmr.html"},"HMR API"),t(' поверх нативного ESM. Фрэймворки с возможностями HMR могут воспользоваться этим API для предоставления моментальных, точных обновлений без перезагрузки страницы или уничтожения всего состояния приложения. Vite имеет "first-party" (собственные, встроенные) HMR интеграции для '),s("a",{href:"https://github.com/vitejs/vite/tree/main/packages/plugin-vue",target:"_blank",rel:"noopener noreferrer"},"Vue Single File Components"),t(" и "),s("a",{href:"https://github.com/vitejs/vite/tree/main/packages/plugin-react-refresh",target:"_blank",rel:"noopener noreferrer"},"React Fast Refresh"),t(". Также есть официальные интеграции для Preact с помощью "),s("a",{href:"https://github.com/JoviDeCroock/prefresh/tree/main/packages/vite",target:"_blank",rel:"noopener noreferrer"},"@prefresh/vite"),t(".")],-1),s("p",null,[t("Обратите внимание, что Вам не нужно настраивать всё это вручную, если вы "),s("a",{href:"./"},[t("создаёте приложение с помощью "),s("code",null,"create-vite")]),t(", в выбранных шаблонах всё уже будет настроено для Вас.")],-1),s("h2",{id:"typescript",tabindex:"-1"},[t("TypeScript "),s("a",{class:"header-anchor",href:"#typescript","aria-hidden":"true"},"#")],-1),s("p",null,[t("Vite поддерживает импорт "),s("code",null,".ts"),t(" файлов прямо из коробки.")],-1),s("p",null,[t("Vite выполняет только транспиляцию "),s("code",null,".ts"),t(" файлов и "),s("strong",null,"НЕ"),t(" выполняет проверку типов (type checking). Предполагается, что проверка типов (type checking) выполняется на стороне вашей IDE и процесса сборки (build proccess). Вы можете добавить "),s("code",null,"tsc --noEmit"),t(" в build script или установить "),s("code",null,"vue-tsc"),t(" и запустить "),s("code",null,"vue-tsc --noEmit"),t(" также, для того чтобы добавить проверку типов в ваши "),s("code",null,"*.vue"),t(" файлы.")],-1),s("p",null,[t("Vite использует "),s("a",{href:"https://github.com/evanw/esbuild",target:"_blank",rel:"noopener noreferrer"},"esbuild"),t(" для транспиляции TypeScript в JavaScript, который в 20~30 раз быстрее чем обычный "),s("code",null,"tsc"),t(", и HMR обновления могут быть отражены в браузере в течение 50ms.")],-1),s("h3",{id:"параметры-компиnятора-typescript",tabindex:"-1"},[t("Параметры компилятора TypeScript "),s("a",{class:"header-anchor",href:"#параметры-компиnятора-typescript","aria-hidden":"true"},"#")],-1),s("p",null,[t("Некоторые свойства (поля) конфигурации в разделе "),s("code",null,"compilerOptions"),t(" в "),s("code",null,"tsconfig.json"),t(" требуют особого внимания.")],-1),s("h4",{id:"isolatedmodules",tabindex:"-1"},[s("code",null,"isolatedModules"),t(),s("a",{class:"header-anchor",href:"#isolatedmodules","aria-hidden":"true"},"#")],-1),s("p",null,[t("Должно быть установлено как "),s("code",null,"true"),t(".")],-1),s("p",null,[t("Это потому что "),s("code",null,"esbuild"),t(" выполняет только транспиляцию без информации о типах, он не поддерживает определённые функции, такие как const enum и implicit type-only импорт.")],-1),s("p",null,[t("Вы должны установить "),s("code",null,'"isolatedModules": true'),t(" в вашем "),s("code",null,"tsconfig.json"),t(" в "),s("code",null,"compilerOptions"),t(", так TS будет предупреждать вас о функциях, которые не работают с изолированной транспиляцией (isolated transpilation).")],-1),s("h4",{id:"usedefineforclassfields",tabindex:"-1"},[s("code",null,"useDefineForClassFields"),t(),s("a",{class:"header-anchor",href:"#usedefineforclassfields","aria-hidden":"true"},"#")],-1),s("p",null,[t("Начиная с Vite 2.5.0, значение по умолчанию будет "),s("code",null,"true"),t(" если TypeScript target - "),s("code",null,"ESNext"),t(". Это соответствует с "),s("a",{href:"https://github.com/microsoft/TypeScript/pull/42663",target:"_blank",rel:"noopener noreferrer"},[t("поведением "),s("code",null,"tsc"),t(" 4.3.2 и более поздние версии")]),t(". Это также стандартное поведение среды выполнения ECMAScript.")],-1),s("p",null,[t("Но это может показаться нелогичным для тех, кто использует другие языки программирования или более старые версии TypeScript. Вы можете узнать больше о переходе тут: "),s("a",{href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html#the-usedefineforclassfields-flag-and-the-declare-property-modifier",target:"_blank",rel:"noopener noreferrer"},"TypeScript 3.7 release notes"),t(".")],-1),s("p",null,"Если вы используете библиотеку, которая сильно зависит от полей класса (class fields), будьте осторожны с предполагаемым использованием этой библиотеки.",-1),s("p",null,[t("Большинство библиотек ожидают "),s("code",null,'"useDefineForClassFields": true'),t(", такие, как "),s("a",{href:"https://mobx.js.org/installation.html#use-spec-compliant-transpilation-for-class-properties",target:"_blank",rel:"noopener noreferrer"},"MobX"),t(", "),s("a",{href:"https://github.com/vuejs/vue-class-component/issues/465",target:"_blank",rel:"noopener noreferrer"},"Vue Class Components 8.x"),t(", и т.д.")],-1),s("p",null,[t("Но некоторые библиотеки еще не перешли на это новое значение по умолчанию, включая "),s("a",{href:"https://github.com/lit/lit-element/issues/1030",target:"_blank",rel:"noopener noreferrer"},[s("code",null,"lit-element")]),t(". Пожалуйста, установите явно для "),s("code",null,"useDefineForClassFields"),t(" значение "),s("code",null,"false"),t(" в этих случаях.")],-1),s("h4",{id:"другие-опции-компиnятора-вnияющие-на-резуnьтат-сборки",tabindex:"-1"},[t("Другие опции компилятора, влияющие на результат сборки "),s("a",{class:"header-anchor",href:"#другие-опции-компиnятора-вnияющие-на-резуnьтат-сборки","aria-hidden":"true"},"#")],-1),s("ul",null,[s("li",null,[s("a",{href:"https://www.typescriptlang.org/tsconfig#extends",target:"_blank",rel:"noopener noreferrer"},[s("code",null,"extends")])]),s("li",null,[s("a",{href:"https://www.typescriptlang.org/tsconfig#importsNotUsedAsValues",target:"_blank",rel:"noopener noreferrer"},[s("code",null,"importsNotUsedAsValues")])]),s("li",null,[s("a",{href:"https://www.typescriptlang.org/tsconfig#jsxFactory",target:"_blank",rel:"noopener noreferrer"},[s("code",null,"jsxFactory")])]),s("li",null,[s("a",{href:"https://www.typescriptlang.org/tsconfig#jsxFragmentFactory",target:"_blank",rel:"noopener noreferrer"},[s("code",null,"jsxFragmentFactory")])])],-1),s("h3",{id:"кnиентские-типы-client-types",tabindex:"-1"},[t("Клиентские типы (Client Types) "),s("a",{class:"header-anchor",href:"#кnиентские-типы-client-types","aria-hidden":"true"},"#")],-1),s("p",null,[t("Типы Vite по умолчанию предназначены для его API Node.js. Чтобы включить клиентскую часть кода в приложении Vite, добавьте файл декларации "),s("code",null,"d.ts"),t(":")],-1),s("div",{class:"language-typescript"},[s("pre",null,[s("code",null,[s("span",{class:"token comment"},'/// <reference types="vite/client" />'),t("\n")])])],-1),s("p",null,[t("Также, Вы можете добавить "),s("code",null,"vite/client"),t(" в "),s("code",null,"compilerOptions.types"),t(" в вашем "),s("code",null,"tsconfig"),t(":")],-1),s("div",{class:"language-json"},[s("pre",null,[s("code",null,[s("span",{class:"token punctuation"},"{"),t("\n  "),s("span",{class:"token property"},'"compilerOptions"'),s("span",{class:"token operator"},":"),t(),s("span",{class:"token punctuation"},"{"),t("\n    "),s("span",{class:"token property"},'"types"'),s("span",{class:"token operator"},":"),t(),s("span",{class:"token punctuation"},"["),s("span",{class:"token string"},'"vite/client"'),s("span",{class:"token punctuation"},"]"),t("\n  "),s("span",{class:"token punctuation"},"}"),t("\n"),s("span",{class:"token punctuation"},"}"),t("\n")])])],-1),s("p",null,"Это предоставит следующие typs shims:",-1),s("ul",null,[s("li",null,[t("Asset imports (например, импорт "),s("code",null,".svg"),t(" файлов)")]),s("li",null,[t("Типы для Vite-injected "),s("a",{href:"./env-and-mode.html#env-variables"},"env variables"),t(" в "),s("code",null,[t("import."),s("wbr"),t("meta.env")])]),s("li",null,[t("Типы для "),s("a",{href:"./api-hmr.html"},"HMR API"),t(" в "),s("code",null,[t("import."),s("wbr"),t("meta.hot")])])],-1),s("h2",{id:"vue",tabindex:"-1"},[t("Vue "),s("a",{class:"header-anchor",href:"#vue","aria-hidden":"true"},"#")],-1),s("p",null,"Vite обеспечивает первоклассную поддержку Vue:",-1),s("ul",null,[s("li",null,[t("Vue 3 SFC работает с помощью "),s("a",{href:"https://github.com/vitejs/vite/tree/main/packages/plugin-vue",target:"_blank",rel:"noopener noreferrer"},"@vitejs/plugin-vue")]),s("li",null,[t("Vue 3 JSX работает с помощью "),s("a",{href:"https://github.com/vitejs/vite/tree/main/packages/plugin-vue-jsx",target:"_blank",rel:"noopener noreferrer"},"@vitejs/plugin-vue-jsx")]),s("li",null,[t("Vue 2 работает с помощью "),s("a",{href:"https://github.com/underfin/vite-plugin-vue2",target:"_blank",rel:"noopener noreferrer"},"underfin/vite-plugin-vue2")])],-1),s("h2",{id:"jsx",tabindex:"-1"},[t("JSX "),s("a",{class:"header-anchor",href:"#jsx","aria-hidden":"true"},"#")],-1),s("p",null,[s("code",null,".jsx"),t(" и"),s("code",null,".tsx"),t(" файлы также поддерживаются из коробки. JSX также работает через "),s("a",{href:"https://esbuild.github.io",target:"_blank",rel:"noopener noreferrer"},"esbuild"),t(", и по умолчанию используется React 16 версии. Поддержку JSX в стиле React 17 в esbuild можно отслеживать "),s("a",{href:"https://github.com/evanw/esbuild/issues/334",target:"_blank",rel:"noopener noreferrer"},"тут"),t(".")],-1),s("p",null,[t("Пользователи Vue должны использовать официальный плагин "),s("a",{href:"https://github.com/vitejs/vite/tree/main/packages/plugin-vue-jsx",target:"_blank",rel:"noopener noreferrer"},"@vitejs/plugin-vue-jsx"),t(", который предоставляет специальные функции Vue 3, включая HMR, глобальное разрешение компонентов (global component resolving), директивы (directives) и слоты (slots).")],-1),s("p",null,[t("Если JSX не используется с React или Vue, пользовательские "),s("code",null,"jsxFactory"),t(" и"),s("code",null," jsxFragment"),t(" могут быть настроены с помощью "),s("a",{href:"/config/#esbuild"},[s("code",null,"esbuild"),t(" option")]),t(". Например, для Preact:")],-1),s("div",{class:"language-js"},[s("pre",null,[s("code",null,[s("span",{class:"token comment"},"// vite.config.js"),t("\n"),s("span",{class:"token keyword"},"export"),t(),s("span",{class:"token keyword"},"default"),t(),s("span",{class:"token function"},"defineConfig"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},"{"),t("\n  esbuild"),s("span",{class:"token operator"},":"),t(),s("span",{class:"token punctuation"},"{"),t("\n    jsxFactory"),s("span",{class:"token operator"},":"),t(),s("span",{class:"token string"},"'h'"),s("span",{class:"token punctuation"},","),t("\n    jsxFragment"),s("span",{class:"token operator"},":"),t(),s("span",{class:"token string"},"'Fragment'"),t("\n  "),s("span",{class:"token punctuation"},"}"),t("\n"),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),t("\n")])])],-1),s("p",null,[t("Больше деталей в "),s("a",{href:"https://esbuild.github.io/content-types/#jsx",target:"_blank",rel:"noopener noreferrer"},"esbuild docs"),t(".")],-1),s("p",null,[t("Вы можете внедрить JSX helpers с помощью "),s("code",null,"jsxInject"),t(" (который доступен только для Vite), чтобы избежать ручного импорта:")],-1),s("div",{class:"language-js"},[s("pre",null,[s("code",null,[s("span",{class:"token comment"},"// vite.config.js"),t("\n"),s("span",{class:"token keyword"},"export"),t(),s("span",{class:"token keyword"},"default"),t(),s("span",{class:"token function"},"defineConfig"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},"{"),t("\n  esbuild"),s("span",{class:"token operator"},":"),t(),s("span",{class:"token punctuation"},"{"),t("\n    jsxInject"),s("span",{class:"token operator"},":"),t(),s("span",{class:"token template-string"},[s("span",{class:"token template-punctuation string"},"`"),s("span",{class:"token string"},"import React from 'react'"),s("span",{class:"token template-punctuation string"},"`")]),t("\n  "),s("span",{class:"token punctuation"},"}"),t("\n"),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),t("\n")])])],-1),s("h2",{id:"css",tabindex:"-1"},[t("CSS "),s("a",{class:"header-anchor",href:"#css","aria-hidden":"true"},"#")],-1),s("p",null,[t("При импорте файлов "),s("code",null,".css"),t(" их содержимое будет вставлено на страницу с помощью тега "),s("code",null,"<style>"),t(" с поддержкой HMR. Вы также можете получить обработанный CSS в виде строки в качестве экспорта модуля по умолчанию (default export).")],-1),s("h3",{id:"import-inlining-и-rebasing-встраивание-и-преобразование",tabindex:"-1"},[s("code",null,"@import"),t(" Inlining и Rebasing (Встраивание и преобразование) "),s("a",{class:"header-anchor",href:"#import-inlining-и-rebasing-встраивание-и-преобразование","aria-hidden":"true"},"#")],-1),s("p",null,[t("Vite предварительно настроен для поддержки CSS "),s("code",null,"@ import"),t(" инлайном через"),s("code",null," postcss-import"),t(". Vite aliases также поддерживаются для CSS "),s("code",null,"@ import"),t(". Кроме того, все ссылки CSS "),s("code",null,"url ()"),t(", даже если импортированные файлы находятся в разных директориях, всегда автоматически преобразуются для обеспечения корректности.")],-1),s("p",null,[s("code",null,"@import"),t(" alias'ы и URL преобразования также поддерживаются для Sass и Less файлов (смотрите "),s("a",{href:"#css-pre-processors"},"CSS Pre-processors"),t(").")],-1),s("h3",{id:"postcss",tabindex:"-1"},[t("PostCSS "),s("a",{class:"header-anchor",href:"#postcss","aria-hidden":"true"},"#")],-1),s("p",null,[t("Если проект содержит допустимую конфигурацию PostCSS (любой форматт поддерживаемый "),s("a",{href:"https://github.com/postcss/postcss-load-config",target:"_blank",rel:"noopener noreferrer"},"postcss-load-config"),t(", например, "),s("code",null,"postcss.config.js"),t("), то этот конфиг будет автоматически применяться ко всем импортируемым файлам CSS.")],-1),s("h3",{id:"css-modules",tabindex:"-1"},[t("CSS Modules "),s("a",{class:"header-anchor",href:"#css-modules","aria-hidden":"true"},"#")],-1),s("p",null,[t("Любой файл CSS, заканчивающийся на "),s("code",null,".module.css"),t(", считается "),s("a",{href:"https://github.com/css-modules/css-modules",target:"_blank",rel:"noopener noreferrer"},"файлом CSS модуля"),t(". Импорт такого файла вернет соответствующий объект модуля:")],-1),s("div",{class:"language-css"},[s("pre",null,[s("code",null,[s("span",{class:"token comment"},"/* example.module.css */"),t("\n"),s("span",{class:"token selector"},".red"),t(),s("span",{class:"token punctuation"},"{"),t("\n  "),s("span",{class:"token property"},"color"),s("span",{class:"token punctuation"},":"),t(" red"),s("span",{class:"token punctuation"},";"),t("\n"),s("span",{class:"token punctuation"},"}"),t("\n")])])],-1),s("div",{class:"language-js"},[s("pre",null,[s("code",null,[s("span",{class:"token keyword"},"import"),t(" classes "),s("span",{class:"token keyword"},"from"),t(),s("span",{class:"token string"},"'./example.module.css'"),t("\ndocument"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"getElementById"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},"'foo'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"."),t("className "),s("span",{class:"token operator"},"="),t(" classes"),s("span",{class:"token punctuation"},"."),t("red\n")])])],-1),s("p",null,[t("Поведение CSS модулей можно настроить с помощью "),s("a",{href:"/config/#css-modules"},[s("code",null,"css.modules"),t(" параметра")]),t(".")],-1),s("p",null,[t("Если "),s("code",null,"css.modules.localsConvention"),t(" выставлено в значение enable camelCase locals (например, "),s("code",null,"localsConvention: 'camelCaseOnly'"),t("), вы также можете использовать именованный импорт:")],-1),s("div",{class:"language-js"},[s("pre",null,[s("code",null,[s("span",{class:"token comment"},"// .apply-color -> applyColor"),t("\n"),s("span",{class:"token keyword"},"import"),t(),s("span",{class:"token punctuation"},"{"),t(" applyColor "),s("span",{class:"token punctuation"},"}"),t(),s("span",{class:"token keyword"},"from"),t(),s("span",{class:"token string"},"'./example.module.css'"),t("\ndocument"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"getElementById"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},"'foo'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"."),t("className "),s("span",{class:"token operator"},"="),t(" applyColor\n")])])],-1),s("h3",{id:"css-pre-processors",tabindex:"-1"},[t("CSS Pre-processors "),s("a",{class:"header-anchor",href:"#css-pre-processors","aria-hidden":"true"},"#")],-1),s("p",null,[t("Поскольку Vite нацелен только на современные браузеры, рекомендуется использовать собственные переменные CSS с плагинами PostCSS, которые реализуют черновики CSSWG (например, "),s("a",{href:"https://github.com/jonathantneal/postcss-nesting",target:"_blank",rel:"noopener noreferrer"},"postcss-nesting"),t(") и авторский простой, future-standards-compliant CSS.")],-1),s("p",null,[t("Тем не менее Vite обеспечивает встроенную поддержку файлов "),s("code",null,".scss"),t(", "),s("code",null,".sass"),t(", "),s("code",null,".less"),t(", "),s("code",null,".styl"),t(" и "),s("code",null,".stylus"),t(". Для них нет необходимости устанавливать специальные плагины для Vite, но должен быть установлен сам соответствующий препроцессор:")],-1),s("div",{class:"language-bash"},[s("pre",null,[s("code",null,[s("span",{class:"token comment"},"# .scss and .sass"),t("\n"),s("span",{class:"token function"},"npm"),t(),s("span",{class:"token function"},"install"),t(" -D sass\n\n"),s("span",{class:"token comment"},"# .less"),t("\n"),s("span",{class:"token function"},"npm"),t(),s("span",{class:"token function"},"install"),t(" -D "),s("span",{class:"token function"},"less"),t("\n\n"),s("span",{class:"token comment"},"# .styl and .stylus"),t("\n"),s("span",{class:"token function"},"npm"),t(),s("span",{class:"token function"},"install"),t(" -D stylus\n")])])],-1),s("p",null,[t("Если вы используете Vue single file components (однофайловые компоненты), то в них также автоматически доступно "),s("code",null,'<style lang="sass">'),t(" и другие препроцессоры.")],-1),s("p",null,[t("Vite улучшает обработку "),s("code",null,"@import"),t(" для Sass и Less, поэтому Vite aliases также учитываются. Более того, относительные "),s("code",null,"url()"),t(" ссылки внутри импортированных Sass/Less файлов, которые в других директориях, отличных от корневого файла, также автоматически преобразуются для консистентности.")],-1),s("p",null,[s("code",null,"@import"),t(" alias и url преобразования не поддерживаются для Stylus из-за его ограничений в API.")],-1),s("p",null,[t("Вы также можете использовать CSS модули в сочетании с препроцессорами, добавив "),s("code",null,".module"),t(" к расширению файла, например "),s("code",null,"style.module.scss"),t(".")],-1),s("h2",{id:"static-assets-статичные-ресурсы",tabindex:"-1"},[t("Static Assets (Статичные ресурсы) "),s("a",{class:"header-anchor",href:"#static-assets-статичные-ресурсы","aria-hidden":"true"},"#")],-1),s("p",null,"Импортирование статичных ресурсов (static assets) вернёт преобразованный public URL, когда он обрабатывается сервером:",-1),s("div",{class:"language-js"},[s("pre",null,[s("code",null,[s("span",{class:"token keyword"},"import"),t(" imgUrl "),s("span",{class:"token keyword"},"from"),t(),s("span",{class:"token string"},"'./img.png'"),t("\ndocument"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"getElementById"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},"'hero-img'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"."),t("src "),s("span",{class:"token operator"},"="),t(" imgUrl\n")])])],-1),s("p",null,"Специальные query параметры могут модифицировать способ загрузки ресурсов:",-1),s("div",{class:"language-js"},[s("pre",null,[s("code",null,[s("span",{class:"token comment"},"// Явно загрузить ресурсы как URL"),t("\n"),s("span",{class:"token keyword"},"import"),t(" assetAsURL "),s("span",{class:"token keyword"},"from"),t(),s("span",{class:"token string"},"'./asset.js?url'"),t("\n")])])],-1),s("div",{class:"language-js"},[s("pre",null,[s("code",null,[s("span",{class:"token comment"},"// Загрузить ресурс как строку"),t("\n"),s("span",{class:"token keyword"},"import"),t(" assetAsString "),s("span",{class:"token keyword"},"from"),t(),s("span",{class:"token string"},"'./shader.glsl?raw'"),t("\n")])])],-1),s("div",{class:"language-js"},[s("pre",null,[s("code",null,[s("span",{class:"token comment"},"// Загрузить Web Workers"),t("\n"),s("span",{class:"token keyword"},"import"),t(" Worker "),s("span",{class:"token keyword"},"from"),t(),s("span",{class:"token string"},"'./worker.js?worker'"),t("\n")])])],-1),s("div",{class:"language-js"},[s("pre",null,[s("code",null,[s("span",{class:"token comment"},"// Web Workers встроены инлайном как строки base64 во время сборки"),t("\n"),s("span",{class:"token keyword"},"import"),t(" InlineWorker "),s("span",{class:"token keyword"},"from"),t(),s("span",{class:"token string"},"'./worker.js?worker&inline'"),t("\n")])])],-1),s("p",null,[t("Больше деталей в разделе "),s("a",{href:"./assets.html"},"Управление статическими ресурсами (Static Asset Handling)"),t(".")],-1),s("h2",{id:"json",tabindex:"-1"},[t("JSON "),s("a",{class:"header-anchor",href:"#json","aria-hidden":"true"},"#")],-1),s("p",null,"JSON файлы могут быть импортированы напрямую - также поддерживается именованный импорт:",-1),s("div",{class:"language-js"},[s("pre",null,[s("code",null,[s("span",{class:"token comment"},"// импорт целого объекта"),t("\n"),s("span",{class:"token keyword"},"import"),t(" json "),s("span",{class:"token keyword"},"from"),t(),s("span",{class:"token string"},"'./example.json'"),t("\n"),s("span",{class:"token comment"},"// импорт корневого поля field как именованный экспорт - помогает с treeshaking!"),t("\n"),s("span",{class:"token keyword"},"import"),t(),s("span",{class:"token punctuation"},"{"),t(" field "),s("span",{class:"token punctuation"},"}"),t(),s("span",{class:"token keyword"},"from"),t(),s("span",{class:"token string"},"'./example.json'"),t("\n")])])],-1),s("h2",{id:"glob-import",tabindex:"-1"},[t("Glob Import "),s("a",{class:"header-anchor",href:"#glob-import","aria-hidden":"true"},"#")],-1),s("p",null,[t("Vite поддерживает импорт множественных модулей из файловой системы с помощью специальной функции "),s("code",null,[t("import."),s("wbr"),t("meta.glob")]),t(":")],-1),s("div",{class:"language-js"},[s("pre",null,[s("code",null,[s("span",{class:"token keyword"},"const"),t(" modules "),s("span",{class:"token operator"},"="),t(),s("span",{class:"token keyword"},"import"),s("span",{class:"token punctuation"},"."),t("meta"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"glob"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},"'./dir/*.js'"),s("span",{class:"token punctuation"},")"),t("\n")])])],-1),s("p",null,"Вышеуказанное будет трансформировано в следующий код:",-1),s("div",{class:"language-js"},[s("pre",null,[s("code",null,[s("span",{class:"token comment"},"// code produced by vite"),t("\n"),s("span",{class:"token keyword"},"const"),t(" modules "),s("span",{class:"token operator"},"="),t(),s("span",{class:"token punctuation"},"{"),t("\n  "),s("span",{class:"token string"},"'./dir/foo.js'"),s("span",{class:"token operator"},":"),t(),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),t(),s("span",{class:"token operator"},"=>"),t(),s("span",{class:"token keyword"},"import"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},"'./dir/foo.js'"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},","),t("\n  "),s("span",{class:"token string"},"'./dir/bar.js'"),s("span",{class:"token operator"},":"),t(),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),t(),s("span",{class:"token operator"},"=>"),t(),s("span",{class:"token keyword"},"import"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},"'./dir/bar.js'"),s("span",{class:"token punctuation"},")"),t("\n"),s("span",{class:"token punctuation"},"}"),t("\n")])])],-1),s("p",null,[t("Затем Вы можете пройтись по всем ключам объекта "),s("code",null,"modules"),t(", чтобы получить доступ к соответствующим модулям:")],-1),s("div",{class:"language-js"},[s("pre",null,[s("code",null,[s("span",{class:"token keyword"},"for"),t(),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"const"),t(" path "),s("span",{class:"token keyword"},"in"),t(" modules"),s("span",{class:"token punctuation"},")"),t(),s("span",{class:"token punctuation"},"{"),t("\n  modules"),s("span",{class:"token punctuation"},"["),t("path"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"then"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},"mod"),s("span",{class:"token punctuation"},")"),t(),s("span",{class:"token operator"},"=>"),t(),s("span",{class:"token punctuation"},"{"),t("\n    console"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"log"),s("span",{class:"token punctuation"},"("),t("path"),s("span",{class:"token punctuation"},","),t(" mod"),s("span",{class:"token punctuation"},")"),t("\n  "),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),t("\n"),s("span",{class:"token punctuation"},"}"),t("\n")])])],-1),s("p",null,[t("Соответствующие файлы по умолчанию загружаются через динамический импорт (dynamic import) в отложенном режиме (lazy load) и будут разбиты на отдельные чанки (chunks) во время сборки. Если вы предпочитаете импортировать все модули напрямую (например, если в этих модулях есть побочные эффекты (side-effects), которые должны быть применены первыми), то вы можете вместо этого использовать `import."),s("wbr"),t("meta.globEager:")],-1),s("div",{class:"language-js"},[s("pre",null,[s("code",null,[s("span",{class:"token keyword"},"const"),t(" modules "),s("span",{class:"token operator"},"="),t(),s("span",{class:"token keyword"},"import"),s("span",{class:"token punctuation"},"."),t("meta"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"globEager"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},"'./dir/*.js'"),s("span",{class:"token punctuation"},")"),t("\n")])])],-1),s("p",null,"Вышеуказанное будет трансформировано в следующий код:",-1),s("div",{class:"language-js"},[s("pre",null,[s("code",null,[s("span",{class:"token comment"},"// code produced by vite"),t("\n"),s("span",{class:"token keyword"},"import"),t(),s("span",{class:"token operator"},"*"),t(),s("span",{class:"token keyword"},"as"),t(" __glob__0_0 "),s("span",{class:"token keyword"},"from"),t(),s("span",{class:"token string"},"'./dir/foo.js'"),t("\n"),s("span",{class:"token keyword"},"import"),t(),s("span",{class:"token operator"},"*"),t(),s("span",{class:"token keyword"},"as"),t(" __glob__0_1 "),s("span",{class:"token keyword"},"from"),t(),s("span",{class:"token string"},"'./dir/bar.js'"),t("\n"),s("span",{class:"token keyword"},"const"),t(" modules "),s("span",{class:"token operator"},"="),t(),s("span",{class:"token punctuation"},"{"),t("\n  "),s("span",{class:"token string"},"'./dir/foo.js'"),s("span",{class:"token operator"},":"),t(" __glob__0_0"),s("span",{class:"token punctuation"},","),t("\n  "),s("span",{class:"token string"},"'./dir/bar.js'"),s("span",{class:"token operator"},":"),t(" __glob__0_1\n"),s("span",{class:"token punctuation"},"}"),t("\n")])])],-1),s("p",null,"Заметьте:",-1),s("ul",null,[s("li",null,"Это чисто функция (фича) Vite и это не Web или ES стандарт."),s("li",null,[t("Шаблоны glob обрабатываются как спецификации import: они должны быть относительными (начинаются с "),s("code",null,"./"),t(") или абсолютными (начинаются с "),s("code",null,"/"),t(", обрабатывается как относительно корня проекта).")]),s("li",null,[t("Сопоставление glob шаблонов выполняется с помощью "),s("code",null,"fast-glob"),t(" - смотрите документацию "),s("a",{href:"https://github.com/mrmlnc/fast-glob#pattern-syntax",target:"_blank",rel:"noopener noreferrer"},"поддержка glob шаблонов (patterns)"),t(".")])],-1),s("h2",{id:"webassembly",tabindex:"-1"},[t("WebAssembly "),s("a",{class:"header-anchor",href:"#webassembly","aria-hidden":"true"},"#")],-1),s("p",null,[t("Предварительно скомпилированные файлы "),s("code",null,".wasm"),t(" можно напрямую импортировать - экспорт по умолчанию будет функцией инициализации, которая возвращает Promise экспортируемого объекта экземпляра wasm:")],-1),s("div",{class:"language-js"},[s("pre",null,[s("code",null,[s("span",{class:"token keyword"},"import"),t(" init "),s("span",{class:"token keyword"},"from"),t(),s("span",{class:"token string"},"'./example.wasm'"),t("\n\n"),s("span",{class:"token function"},"init"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"then"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},"("),s("span",{class:"token parameter"},"exports"),s("span",{class:"token punctuation"},")"),t(),s("span",{class:"token operator"},"=>"),t(),s("span",{class:"token punctuation"},"{"),t("\n  exports"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"test"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),t("\n"),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),t("\n")])])],-1),s("p",null,[t("Функция init также может принимать объект "),s("code",null,"import"),t(", который передается в"),s("code",null," WebAssembly.instantiate"),t(" в качестве второго аргумента:")],-1),s("div",{class:"language-js"},[s("pre",null,[s("code",null,[s("span",{class:"token function"},"init"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},"{"),t("\n  imports"),s("span",{class:"token operator"},":"),t(),s("span",{class:"token punctuation"},"{"),t("\n    "),s("span",{class:"token function-variable function"},"someFunc"),s("span",{class:"token operator"},":"),t(),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),t(),s("span",{class:"token operator"},"=>"),t(),s("span",{class:"token punctuation"},"{"),t("\n      "),s("span",{class:"token comment"},"/* ... */"),t("\n    "),s("span",{class:"token punctuation"},"}"),t("\n  "),s("span",{class:"token punctuation"},"}"),t("\n"),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"then"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),t(),s("span",{class:"token operator"},"=>"),t(),s("span",{class:"token punctuation"},"{"),t("\n  "),s("span",{class:"token comment"},"/* ... */"),t("\n"),s("span",{class:"token punctuation"},"}"),s("span",{class:"token punctuation"},")"),t("\n")])])],-1),s("p",null,[t("В production сборке файлы "),s("code",null,".wasm"),t(" меньше, чем "),s("code",null,"assetInlineLimit"),t(", будут встроены как строки base64. В противном случае они будут скопированы в каталог dist как ресурс (asset) и извлечены по запросу.")],-1),s("h2",{id:"web-workers",tabindex:"-1"},[t("Web Workers "),s("a",{class:"header-anchor",href:"#web-workers","aria-hidden":"true"},"#")],-1),s("p",null,[t("Скрипт веб-воркера можно напрямую импортировать, добавив к запросу при импортировании "),s("code",null,"?worker"),t(" или "),s("code",null,"?sharedworker"),t(". По умолчанию экспортируется custom worker constructor:")],-1),s("div",{class:"language-js"},[s("pre",null,[s("code",null,[s("span",{class:"token keyword"},"import"),t(" MyWorker "),s("span",{class:"token keyword"},"from"),t(),s("span",{class:"token string"},"'./worker?worker'"),t("\n\n"),s("span",{class:"token keyword"},"const"),t(" worker "),s("span",{class:"token operator"},"="),t(),s("span",{class:"token keyword"},"new"),t(),s("span",{class:"token class-name"},"MyWorker"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),t("\n")])])],-1),s("p",null,[t("Worker script также может использовать операторы "),s("code",null,"import"),t(" вместо "),s("code",null,"importScripts()"),t(" - обратите внимание, что во время разработки это зависит от встроенной поддержки браузера и в настоящее время работает только в Chrome, но для производственной сборки он компилируется.")],-1),s("p",null,[t("По умолчанию worker script будет выпущен как отдельный блок в production сборке. Если вы хотите встроить воркер инлайном как строки base64, добавьте query параметр "),s("code",null,"inline"),t(":")],-1),s("div",{class:"language-js"},[s("pre",null,[s("code",null,[s("span",{class:"token keyword"},"import"),t(" MyWorker "),s("span",{class:"token keyword"},"from"),t(),s("span",{class:"token string"},"'./worker?worker&inline'"),t("\n")])])],-1),s("h2",{id:"оптимизация-сборки",tabindex:"-1"},[t("Оптимизация сборки "),s("a",{class:"header-anchor",href:"#оптимизация-сборки","aria-hidden":"true"},"#")],-1),s("blockquote",null,[s("p",null,"Перечисленный ниже функционал автоматически применяется как часть сборочного процесса (build process) и не нужно никакой явной конфигурации для этого, если только вы не захотите что-то отключить.")],-1),s("h3",{id:"css-code-splitting-раздеnение-css-кода",tabindex:"-1"},[t("CSS Code Splitting (Разделение CSS кода) "),s("a",{class:"header-anchor",href:"#css-code-splitting-раздеnение-css-кода","aria-hidden":"true"},"#")],-1),s("p",null,[t("Vite автоматически извлекает CSS, используемый модулями в асинхронный чанк (async chunk) и генерирует отдельный файл для этого. CSS файл автоматически грузится через "),s("code",null,"<link>"),t(" тэг когда загружается связанный с ним асинхронный чанк, а асинхронный чанк гарантировано выполняется только после загрузки CSS, чтобы избежать "),s("a",{href:"https://en.wikipedia.org/wiki/Flash_of_unstyled_content#:~:text=A%20flash%20of%20unstyled%20content,before%20all%20information%20is%20retrieved.",target:"_blank",rel:"noopener noreferrer"},"FOUC"),t(".")],-1),s("p",null,[t("Если вы хотите, чтобы весь CSS был извлечен в один файл, вы можете отключить разделение кода CSS, установив для "),s("a",{href:"/config/#build-csscodesplit"},[s("code",null,"build.cssCodeSplit")]),t(" значение "),s("code",null,"false"),t(".")],-1),s("h3",{id:"preload-directives-generation-генерация-директив-предваритеnьной-загрузки",tabindex:"-1"},[t("Preload Directives Generation (Генерация директив предварительной загрузки) "),s("a",{class:"header-anchor",href:"#preload-directives-generation-генерация-директив-предваритеnьной-загрузки","aria-hidden":"true"},"#")],-1),s("p",null,[t("Vite автоматически генерирует директивы "),s("code",null,'<link rel = "modulepreload">'),t(" для entry chunks и их прямого импорта во встроенном HTML.")],-1),s("h3",{id:"async-chunk-loading-optimization-оптимизация-загрузки-асинхронных-чанков",tabindex:"-1"},[t("Async Chunk Loading Optimization (Оптимизация загрузки асинхронных чанков) "),s("a",{class:"header-anchor",href:"#async-chunk-loading-optimization-оптимизация-загрузки-асинхронных-чанков","aria-hidden":"true"},"#")],-1),s("p",null,"В реальных приложениях, Rollup часто генерирует «общие» чанки - код, который используется совместно с другими двумя или более чанками. В сочетании с динамическим импортом довольно часто встречается следующий сценарий:",-1),s("p",null,[s("img",{src:"/assets/graph.8f2f36b7.png",alt:"graph"})],-1),s("p",null,[t("В не оптимизированных сценариях, когда асинхронный чанк "),s("code",null,"A"),t(" импортируется, браузер должен будет запросить и спарсить"),s("code",null," A"),t(", прежде чем он сможет определить, что ему также нужен общий фрагмент "),s("code",null,"C"),t(". Это приводит к дополнительному сетевому обходу (extra network roundtrip):")],-1),s("div",{class:"language-"},[s("pre",null,[s("code",null,"Entry ---\x3e A ---\x3e C\n")])],-1),s("p",null,[t("Vite автоматически перезаписывает code-split dynamic import вызовы с шагом предварительной загрузки, поэтому когда "),s("code",null,"A"),t(" запрашивается, "),s("code",null,"C"),t(" также грузится "),s("strong",null,"параллельно"),t(":")],-1),s("div",{class:"language-"},[s("pre",null,[s("code",null,"Entry ---\x3e (A + C)\n")])],-1),s("p",null,[t("Также возможно, что "),s("code",null,"C"),t(" будет иметь ещё импорты дальше, которые приведут к ещё большему количеству обходов (roundtrips) в не оптимизированном сценарии. Оптимизированный Vite будет отслеживать все прямые импорты, чтобы полностью исключить эти обходы (roundtrips) независимо от глубины импортирования.")],-1)];l.render=function(s,t,a,l,r,c){return n(),e("div",null,o)};export{a as __pageData,l as default};
