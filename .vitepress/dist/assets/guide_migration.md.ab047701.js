import{o as n,c as s,d as a}from"./app.877e1a61.js";const e='{"title":"Миграция с v1","description":"","frontmatter":{},"headers":[{"level":2,"title":"Изменения в Config Options","slug":"изменения-в-config-options"},{"level":2,"title":"Изменения в Alias Behavior","slug":"изменения-в-alias-behavior"},{"level":2,"title":"Поддержка Vue","slug":"поддержка-vue"},{"level":3,"title":"Custom Blocks Transforms","slug":"custom-blocks-transforms"},{"level":2,"title":"Поддержка React","slug":"поддержка-react"},{"level":2,"title":"Изменения в HMR API","slug":"изменения-в-hmr-api"},{"level":2,"title":"Изменения формата Manifest","slug":"изменения-формата-manifest"},{"level":2,"title":"Для авторов плагинов","slug":"дnя-авторов-пnагинов"}],"relativePath":"guide/migration.md","lastUpdated":1631743592655}',o={},t=[a('<h1 id="миграция-с-v1" tabindex="-1">Миграция с v1 <a class="header-anchor" href="#миграция-с-v1" aria-hidden="true">#</a></h1><h2 id="изменения-в-config-options" tabindex="-1">Изменения в Config Options <a class="header-anchor" href="#изменения-в-config-options" aria-hidden="true">#</a></h2><ul><li><p>Следующие опции были удалены, и они будут реализовываться с помощью <a href="./api-plugin.html">plugins</a>:</p><ul><li><code>resolvers</code></li><li><code>transforms</code></li><li><code>indexHtmlTransforms</code></li></ul></li><li><p><code>jsx</code> и <code>enableEsbuild</code> удалены; Используйте вместо этого новую опцию <a href="/config/#esbuild"><code>esbuild</code></a>.</p></li><li><p><a href="/config/#css-modules">CSS related options</a> сейчас вложены в <code>css</code>.</p></li><li><p>Все <a href="/config/#build-options">build-specific options</a> сейчас вложены в <code>build</code>.</p><ul><li><code>rollupInputOptions</code> и <code>rollupOutputOptions</code> заменены на <a href="/config/#build-rollupoptions"><code>build.rollupOptions</code></a>.</li><li><code>esbuildTarget</code> сейчас - <a href="/config/#build-target"><code>build.target</code></a>.</li><li><code>emitManifest</code> сейчас - <a href="/config/#build-manifest"><code>build.manifest</code></a>.</li><li>Следующие build options удалены, потому что они могут быть настроены через plugin hooks или другие опции: <ul><li><code>entry</code></li><li><code>rollupDedupe</code></li><li><code>emitAssets</code></li><li><code>emitIndex</code></li><li><code>shouldPreload</code></li><li><code>configureBuild</code></li></ul></li></ul></li><li><p>Все <a href="/config/#server-options">server-specific options</a> сейчас вложены в <code>server</code>.</p><ul><li><code>hostname</code> сейчас - <a href="/config/#server-host"><code>server.host</code></a>.</li><li><code>httpsOptions</code> удалено. <a href="/config/#server-https"><code>server.https</code></a> может прямо получать объект с опциями.</li><li><code>chokidarWatchOptions</code> сейчас - <a href="/config/#server-watch"><code>server.watch</code></a>.</li></ul></li><li><p><a href="/config/#assetsinclude"><code>assetsInclude</code></a> сейчас принимает <code>string | RegExp | (string | RegExp)[]</code> вместо функции.</p></li><li><p>Все Vue specific опции удалены; Вместо этого, передавайте опции во Vue plugin.</p></li></ul><h2 id="изменения-в-alias-behavior" tabindex="-1">Изменения в Alias Behavior <a class="header-anchor" href="#изменения-в-alias-behavior" aria-hidden="true">#</a></h2><p><a href="/config/#resolve-alias"><code>alias</code></a> сейчас передаются в <code>@rollup/plugin-alias</code> и больше не нужно start/ending слэшей. Поведение сейчас - это прямая замена, поэтому у 1.0-style directory alias ключей надо удалить ending слэш:</p><div class="language-diff"><pre><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> alias: { &#39;/@foo/&#39;: path.resolve(__dirname, &#39;some-special-dir&#39;) }\n</span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> alias: { &#39;/@foo&#39;: path.resolve(__dirname, &#39;some-special-dir&#39;) }\n</span></span></code></pre></div><p>Или же вы можете использовать формат опций <code>[{ find: RegExp, replacement: string }]</code> для более точного контроля.</p><h2 id="поддержка-vue" tabindex="-1">Поддержка Vue <a class="header-anchor" href="#поддержка-vue" aria-hidden="true">#</a></h2><p>Vite 2.0 core сейчас независим от фреймворка &quot;framework agnostic&quot;. Поддержка Vue реализована благодаря <a href="https://github.com/vitejs/vite/tree/main/packages/plugin-vue" target="_blank" rel="noopener noreferrer"><code>@vitejs/plugin-vue</code></a>. Просто установите этот плагин и добавьте его в Vite config файл:</p><div class="language-js"><pre><code><span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&#39;@vitejs/plugin-vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="custom-blocks-transforms" tabindex="-1">Custom Blocks Transforms <a class="header-anchor" href="#custom-blocks-transforms" aria-hidden="true">#</a></h3><p>Кастомный плагин может быть использован для трансформации Vue custom блоков как в примере ниже:</p><div class="language-ts"><pre><code><span class="token comment">// vite.config.js</span>\n<span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&#39;@vitejs/plugin-vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span>\n\n<span class="token keyword">const</span> vueI18nPlugin <span class="token operator">=</span> <span class="token punctuation">{</span>\n  name<span class="token operator">:</span> <span class="token string">&#39;vue-i18n&#39;</span><span class="token punctuation">,</span>\n  <span class="token function">transform</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">vue&amp;type=i18n</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.ya?ml$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      code <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">&#39;js-yaml&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">safeLoad</span><span class="token punctuation">(</span>code<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">export default Comp =&gt; {\n      Comp.i18n = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\n    }</span><span class="token template-punctuation string">`</span></span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> vueI18nPlugin<span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="поддержка-react" tabindex="-1">Поддержка React <a class="header-anchor" href="#поддержка-react" aria-hidden="true">#</a></h2><p>Поддеркжка React Fast Refresh доступна через <a href="https://github.com/vitejs/vite/tree/main/packages/plugin-react-refresh" target="_blank" rel="noopener noreferrer"><code>@vitejs/plugin-react-refresh</code></a>.</p><h2 id="изменения-в-hmr-api" tabindex="-1">Изменения в HMR API <a class="header-anchor" href="#изменения-в-hmr-api" aria-hidden="true">#</a></h2><p><code>import.<wbr>meta.hot.acceptDeps()</code> устарело <code>deprecated</code>. <a href="./api-hmr.html#hot-accept-deps-cb"><code>import.<wbr>meta.hot.accept()</code></a> сейчас может принимать одну или множество зависимостей (deps).</p><h2 id="изменения-формата-manifest" tabindex="-1">Изменения формата Manifest <a class="header-anchor" href="#изменения-формата-manifest" aria-hidden="true">#</a></h2><p>Build manifest сейчас использует следующий формат:</p><div class="language-json"><pre><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;index.js&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;file&quot;</span><span class="token operator">:</span> <span class="token string">&quot;assets/index.acaf2b48.js&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;imports&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>...<span class="token punctuation">]</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;index.css&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;file&quot;</span><span class="token operator">:</span> <span class="token string">&quot;assets/index.7b7dbd85.css&quot;</span>\n  <span class="token punctuation">}</span>\n  <span class="token property">&quot;asset.png&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;file&quot;</span><span class="token operator">:</span> <span class="token string">&quot;assets/asset.0ab0f9cd.png&quot;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>Для entry JS chunks, также выводится список импортированных чанков, которые могут быть использованы для рендера preload directives.</p><h2 id="дnя-авторов-пnагинов" tabindex="-1">Для авторов плагинов <a class="header-anchor" href="#дnя-авторов-пnагинов" aria-hidden="true">#</a></h2><p>Vite 2 использует совершенно перепроектированный интерфейс плагинов, который расширяет плагины Rollup&#39;а. Пожалуйста, читайте новый <a href="./api-plugin.html">Plugin Development Guide</a>.</p><p>Некоторые общие пункты для миграции с v1 plugin на v2:</p><ul><li><code>resolvers</code> -&gt; используйте <a href="https://rollupjs.org/guide/en/#resolveid" target="_blank" rel="noopener noreferrer"><code>resolveId</code></a> hook</li><li><code>transforms</code> -&gt; используйте <a href="https://rollupjs.org/guide/en/#transform" target="_blank" rel="noopener noreferrer"><code>transform</code></a> hook</li><li><code>indexHtmlTransforms</code> -&gt; используйте <a href="./api-plugin.html#transformindexhtml"><code>transformIndexHtml</code></a> hook</li><li>Serving virtual files -&gt; используйте <a href="https://rollupjs.org/guide/en/#resolveid" target="_blank" rel="noopener noreferrer"><code>resolveId</code></a> + <a href="https://rollupjs.org/guide/en/#load" target="_blank" rel="noopener noreferrer"><code>load</code></a> hooks</li><li>Добавить <code>alias</code>, <code>define</code> или другие config опции -&gt; используйте <a href="./api-plugin.html#config"><code>config</code></a> hook</li></ul><p>Так как большинство логики можно реализовать через plugin hooks вместо middlewares, то нужда в middlewares значительно уменьшена. Internal server app сейчас старый добрый - <a href="https://github.com/senchalabs/connect" target="_blank" rel="noopener noreferrer">connect</a> вместо Koa.</p>',26)];o.render=function(a,e,o,p,c,i){return n(),s("div",null,t)};export{e as __pageData,o as default};
